// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_INCLUDED_game_2eproto
#define PROTOBUF_INCLUDED_game_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_game_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_game_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_game_2eproto();
class GuestLoginReq;
class GuestLoginReqDefaultTypeInternal;
extern GuestLoginReqDefaultTypeInternal _GuestLoginReq_default_instance_;
class GuestLoginRes;
class GuestLoginResDefaultTypeInternal;
extern GuestLoginResDefaultTypeInternal _GuestLoginRes_default_instance_;
class UserCenterInfo;
class UserCenterInfoDefaultTypeInternal;
extern UserCenterInfoDefaultTypeInternal _UserCenterInfo_default_instance_;
namespace google {
namespace protobuf {
template<> ::GuestLoginReq* Arena::CreateMaybeMessage<::GuestLoginReq>(Arena*);
template<> ::GuestLoginRes* Arena::CreateMaybeMessage<::GuestLoginRes>(Arena*);
template<> ::UserCenterInfo* Arena::CreateMaybeMessage<::UserCenterInfo>(Arena*);
}  // namespace protobuf
}  // namespace google

enum Stype {
  INVALIDI_STYPE = 0,
  AUTH_STYPE = 1,
  SYSTEM_STYPE = 2,
  LOGIC_STYPE = 3,
  Stype_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Stype_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Stype_IsValid(int value);
const Stype Stype_MIN = INVALIDI_STYPE;
const Stype Stype_MAX = LOGIC_STYPE;
const int Stype_ARRAYSIZE = Stype_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stype_descriptor();
inline const ::std::string& Stype_Name(Stype value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stype_descriptor(), value);
}
inline bool Stype_Parse(
    const ::std::string& name, Stype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stype>(
    Stype_descriptor(), name, value);
}
enum Cmd {
  INVALID_CMD = 0,
  eGuestLoginReq = 1,
  eGuestLoginRes = 2,
  Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVALID_CMD;
const Cmd Cmd_MAX = eGuestLoginRes;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class GuestLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginReq) */ {
 public:
  GuestLoginReq();
  virtual ~GuestLoginReq();

  GuestLoginReq(const GuestLoginReq& from);

  inline GuestLoginReq& operator=(const GuestLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginReq(GuestLoginReq&& from) noexcept
    : GuestLoginReq() {
    *this = ::std::move(from);
  }

  inline GuestLoginReq& operator=(GuestLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GuestLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginReq* internal_default_instance() {
    return reinterpret_cast<const GuestLoginReq*>(
               &_GuestLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GuestLoginReq* other);
  friend void swap(GuestLoginReq& a, GuestLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginReq* New() const final {
    return CreateMaybeMessage<GuestLoginReq>(nullptr);
  }

  GuestLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuestLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuestLoginReq& from);
  void MergeFrom(const GuestLoginReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuestLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guest_key = 1;
  void clear_guest_key();
  static const int kGuestKeyFieldNumber = 1;
  const ::std::string& guest_key() const;
  void set_guest_key(const ::std::string& value);
  #if LANG_CXX11
  void set_guest_key(::std::string&& value);
  #endif
  void set_guest_key(const char* value);
  void set_guest_key(const char* value, size_t size);
  ::std::string* mutable_guest_key();
  ::std::string* release_guest_key();
  void set_allocated_guest_key(::std::string* guest_key);

  // @@protoc_insertion_point(class_scope:GuestLoginReq)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guest_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class UserCenterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserCenterInfo) */ {
 public:
  UserCenterInfo();
  virtual ~UserCenterInfo();

  UserCenterInfo(const UserCenterInfo& from);

  inline UserCenterInfo& operator=(const UserCenterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCenterInfo(UserCenterInfo&& from) noexcept
    : UserCenterInfo() {
    *this = ::std::move(from);
  }

  inline UserCenterInfo& operator=(UserCenterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserCenterInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCenterInfo* internal_default_instance() {
    return reinterpret_cast<const UserCenterInfo*>(
               &_UserCenterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserCenterInfo* other);
  friend void swap(UserCenterInfo& a, UserCenterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCenterInfo* New() const final {
    return CreateMaybeMessage<UserCenterInfo>(nullptr);
  }

  UserCenterInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCenterInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCenterInfo& from);
  void MergeFrom(const UserCenterInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCenterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string unick = 1;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // uint32 sex = 2;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // uint32 face = 3;
  void clear_face();
  static const int kFaceFieldNumber = 3;
  ::google::protobuf::uint32 face() const;
  void set_face(::google::protobuf::uint32 value);

  // uint32 uvip = 4;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::uint32 uvip() const;
  void set_uvip(::google::protobuf::uint32 value);

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserCenterInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 uvip_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class GuestLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginRes) */ {
 public:
  GuestLoginRes();
  virtual ~GuestLoginRes();

  GuestLoginRes(const GuestLoginRes& from);

  inline GuestLoginRes& operator=(const GuestLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginRes(GuestLoginRes&& from) noexcept
    : GuestLoginRes() {
    *this = ::std::move(from);
  }

  inline GuestLoginRes& operator=(GuestLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GuestLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginRes* internal_default_instance() {
    return reinterpret_cast<const GuestLoginRes*>(
               &_GuestLoginRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GuestLoginRes* other);
  friend void swap(GuestLoginRes& a, GuestLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginRes* New() const final {
    return CreateMaybeMessage<GuestLoginRes>(nullptr);
  }

  GuestLoginRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuestLoginRes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuestLoginRes& from);
  void MergeFrom(const GuestLoginRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuestLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .UserCenterInfo userinfo = 2;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  const ::UserCenterInfo& userinfo() const;
  ::UserCenterInfo* release_userinfo();
  ::UserCenterInfo* mutable_userinfo();
  void set_allocated_userinfo(::UserCenterInfo* userinfo);

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginRes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::UserCenterInfo* userinfo_;
  ::google::protobuf::int32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuestLoginReq

// string guest_key = 1;
inline void GuestLoginReq::clear_guest_key() {
  guest_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GuestLoginReq::guest_key() const {
  // @@protoc_insertion_point(field_get:GuestLoginReq.guest_key)
  return guest_key_.GetNoArena();
}
inline void GuestLoginReq::set_guest_key(const ::std::string& value) {
  
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLoginReq.guest_key)
}
#if LANG_CXX11
inline void GuestLoginReq::set_guest_key(::std::string&& value) {
  
  guest_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLoginReq.guest_key)
}
#endif
inline void GuestLoginReq::set_guest_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLoginReq.guest_key)
}
inline void GuestLoginReq::set_guest_key(const char* value, size_t size) {
  
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLoginReq.guest_key)
}
inline ::std::string* GuestLoginReq::mutable_guest_key() {
  
  // @@protoc_insertion_point(field_mutable:GuestLoginReq.guest_key)
  return guest_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLoginReq::release_guest_key() {
  // @@protoc_insertion_point(field_release:GuestLoginReq.guest_key)
  
  return guest_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLoginReq::set_allocated_guest_key(::std::string* guest_key) {
  if (guest_key != nullptr) {
    
  } else {
    
  }
  guest_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guest_key);
  // @@protoc_insertion_point(field_set_allocated:GuestLoginReq.guest_key)
}

// -------------------------------------------------------------------

// UserCenterInfo

// string unick = 1;
inline void UserCenterInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserCenterInfo::unick() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.unick)
  return unick_.GetNoArena();
}
inline void UserCenterInfo::set_unick(const ::std::string& value) {
  
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.unick)
}
#if LANG_CXX11
inline void UserCenterInfo::set_unick(::std::string&& value) {
  
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.unick)
}
#endif
inline void UserCenterInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.unick)
}
inline void UserCenterInfo::set_unick(const char* value, size_t size) {
  
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.unick)
}
inline ::std::string* UserCenterInfo::mutable_unick() {
  
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_unick() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.unick)
  
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_unick(::std::string* unick) {
  if (unick != nullptr) {
    
  } else {
    
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.unick)
}

// uint32 sex = 2;
inline void UserCenterInfo::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 UserCenterInfo::sex() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.sex)
  return sex_;
}
inline void UserCenterInfo::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.sex)
}

// uint32 face = 3;
inline void UserCenterInfo::clear_face() {
  face_ = 0u;
}
inline ::google::protobuf::uint32 UserCenterInfo::face() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.face)
  return face_;
}
inline void UserCenterInfo::set_face(::google::protobuf::uint32 value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.face)
}

// uint32 uvip = 4;
inline void UserCenterInfo::clear_uvip() {
  uvip_ = 0u;
}
inline ::google::protobuf::uint32 UserCenterInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uvip)
  return uvip_;
}
inline void UserCenterInfo::set_uvip(::google::protobuf::uint32 value) {
  
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uvip)
}

// uint32 uid = 5;
inline void UserCenterInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 UserCenterInfo::uid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uid)
  return uid_;
}
inline void UserCenterInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uid)
}

// -------------------------------------------------------------------

// GuestLoginRes

// int32 status = 1;
inline void GuestLoginRes::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GuestLoginRes::status() const {
  // @@protoc_insertion_point(field_get:GuestLoginRes.status)
  return status_;
}
inline void GuestLoginRes::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginRes.status)
}

// .UserCenterInfo userinfo = 2;
inline bool GuestLoginRes::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != nullptr;
}
inline void GuestLoginRes::clear_userinfo() {
  if (GetArenaNoVirtual() == nullptr && userinfo_ != nullptr) {
    delete userinfo_;
  }
  userinfo_ = nullptr;
}
inline const ::UserCenterInfo& GuestLoginRes::userinfo() const {
  const ::UserCenterInfo* p = userinfo_;
  // @@protoc_insertion_point(field_get:GuestLoginRes.userinfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* GuestLoginRes::release_userinfo() {
  // @@protoc_insertion_point(field_release:GuestLoginRes.userinfo)
  
  ::UserCenterInfo* temp = userinfo_;
  userinfo_ = nullptr;
  return temp;
}
inline ::UserCenterInfo* GuestLoginRes::mutable_userinfo() {
  
  if (userinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::UserCenterInfo>(GetArenaNoVirtual());
    userinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GuestLoginRes.userinfo)
  return userinfo_;
}
inline void GuestLoginRes::set_allocated_userinfo(::UserCenterInfo* userinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete userinfo_;
  }
  if (userinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      userinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userinfo, submessage_arena);
    }
    
  } else {
    
  }
  userinfo_ = userinfo;
  // @@protoc_insertion_point(field_set_allocated:GuestLoginRes.userinfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Stype> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Stype>() {
  return ::Stype_descriptor();
}
template <> struct is_proto_enum< ::Cmd> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_game_2eproto
