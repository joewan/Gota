// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_game_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserCenterInfo_game_2eproto;
class GuestLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginReq> _instance;
} _GuestLoginReq_default_instance_;
class UserCenterInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserCenterInfo> _instance;
} _UserCenterInfo_default_instance_;
class GuestLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginRes> _instance;
} _GuestLoginRes_default_instance_;
class EditProfileReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditProfileReq> _instance;
} _EditProfileReq_default_instance_;
class EditProfileResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditProfileRes> _instance;
} _EditProfileRes_default_instance_;
static void InitDefaultsGuestLoginReq_game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GuestLoginReq_default_instance_;
    new (ptr) ::GuestLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GuestLoginReq_game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGuestLoginReq_game_2eproto}, {}};

static void InitDefaultsUserCenterInfo_game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UserCenterInfo_default_instance_;
    new (ptr) ::UserCenterInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserCenterInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserCenterInfo_game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserCenterInfo_game_2eproto}, {}};

static void InitDefaultsGuestLoginRes_game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_GuestLoginRes_default_instance_;
    new (ptr) ::GuestLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GuestLoginRes_game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGuestLoginRes_game_2eproto}, {
      &scc_info_UserCenterInfo_game_2eproto.base,}};

static void InitDefaultsEditProfileReq_game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EditProfileReq_default_instance_;
    new (ptr) ::EditProfileReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EditProfileReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EditProfileReq_game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEditProfileReq_game_2eproto}, {}};

static void InitDefaultsEditProfileRes_game_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_EditProfileRes_default_instance_;
    new (ptr) ::EditProfileRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EditProfileRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EditProfileRes_game_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEditProfileRes_game_2eproto}, {}};

void InitDefaults_game_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_GuestLoginReq_game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserCenterInfo_game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GuestLoginRes_game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EditProfileReq_game_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EditProfileRes_game_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_game_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_game_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_game_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_game_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GuestLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GuestLoginReq, guest_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, unick_),
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, uface_),
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, usex_),
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, uvip_),
  PROTOBUF_FIELD_OFFSET(::UserCenterInfo, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GuestLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GuestLoginRes, status_),
  PROTOBUF_FIELD_OFFSET(::GuestLoginRes, userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EditProfileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EditProfileReq, unick_),
  PROTOBUF_FIELD_OFFSET(::EditProfileReq, uface_),
  PROTOBUF_FIELD_OFFSET(::EditProfileReq, usex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EditProfileRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::EditProfileRes, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GuestLoginReq)},
  { 6, -1, sizeof(::UserCenterInfo)},
  { 16, -1, sizeof(::GuestLoginRes)},
  { 23, -1, sizeof(::EditProfileReq)},
  { 31, -1, sizeof(::EditProfileRes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserCenterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EditProfileReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EditProfileRes_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_game_2eproto = {
  {}, AddDescriptors_game_2eproto, "game.proto", schemas,
  file_default_instances, TableStruct_game_2eproto::offsets,
  file_level_metadata_game_2eproto, 5, file_level_enum_descriptors_game_2eproto, file_level_service_descriptors_game_2eproto,
};

const char descriptor_table_protodef_game_2eproto[] =
  "\n\ngame.proto\"\"\n\rGuestLoginReq\022\021\n\tguest_k"
  "ey\030\001 \001(\t\"W\n\016UserCenterInfo\022\r\n\005unick\030\001 \001("
  "\t\022\r\n\005uface\030\002 \001(\005\022\014\n\004usex\030\003 \001(\005\022\014\n\004uvip\030\004"
  " \001(\005\022\013\n\003uid\030\005 \001(\005\"B\n\rGuestLoginRes\022\016\n\006st"
  "atus\030\001 \001(\005\022!\n\010userinfo\030\002 \001(\0132\017.UserCente"
  "rInfo\"<\n\016EditProfileReq\022\r\n\005unick\030\001 \001(\t\022\r"
  "\n\005uface\030\002 \001(\005\022\014\n\004usex\030\003 \001(\005\" \n\016EditProfi"
  "leRes\022\016\n\006status\030\001 \001(\005*N\n\005Stype\022\022\n\016INVALI"
  "DI_STYPE\020\000\022\016\n\nAUTH_STYPE\020\001\022\020\n\014SYSTEM_STY"
  "PE\020\002\022\017\n\013LOGIC_STYPE\020\003*\214\001\n\003Cmd\022\017\n\013INVALID"
  "_CMD\020\000\022\022\n\016eGuestLoginReq\020\001\022\022\n\016eGuestLogi"
  "nRes\020\002\022\017\n\013eReLoginRes\020\003\022\021\n\reUserLostConn"
  "\020\004\022\023\n\017eEditProfileReq\020\005\022\023\n\017eEditProfileR"
  "es\020\006b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_game_2eproto = {
  false, InitDefaults_game_2eproto, 
  descriptor_table_protodef_game_2eproto,
  "game.proto", &assign_descriptors_table_game_2eproto, 532,
};

void AddDescriptors_game_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_game_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_game_2eproto = []() { AddDescriptors_game_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* Stype_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[0];
}
bool Stype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Cmd_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[1];
}
bool Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GuestLoginReq::InitAsDefaultInstance() {
}
class GuestLoginReq::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginReq::kGuestKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginReq::GuestLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginReq)
}
GuestLoginReq::GuestLoginReq(const GuestLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guest_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guest_key().size() > 0) {
    guest_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guest_key_);
  }
  // @@protoc_insertion_point(copy_constructor:GuestLoginReq)
}

void GuestLoginReq::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GuestLoginReq_game_2eproto.base);
  guest_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuestLoginReq::~GuestLoginReq() {
  // @@protoc_insertion_point(destructor:GuestLoginReq)
  SharedDtor();
}

void GuestLoginReq::SharedDtor() {
  guest_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuestLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GuestLoginReq& GuestLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GuestLoginReq_game_2eproto.base);
  return *internal_default_instance();
}


void GuestLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guest_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GuestLoginReq::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GuestLoginReq*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string guest_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("GuestLoginReq.guest_key");
        auto str = msg->mutable_guest_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GuestLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string guest_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guest_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guest_key().data(), static_cast<int>(this->guest_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GuestLoginReq.guest_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GuestLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guest_key = 1;
  if (this->guest_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guest_key().data(), static_cast<int>(this->guest_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GuestLoginReq.guest_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guest_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginReq)
}

::google::protobuf::uint8* GuestLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guest_key = 1;
  if (this->guest_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guest_key().data(), static_cast<int>(this->guest_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GuestLoginReq.guest_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guest_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginReq)
  return target;
}

size_t GuestLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string guest_key = 1;
  if (this->guest_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guest_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GuestLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginReq* source =
      ::google::protobuf::DynamicCastToGenerated<GuestLoginReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginReq)
    MergeFrom(*source);
  }
}

void GuestLoginReq::MergeFrom(const GuestLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guest_key().size() > 0) {

    guest_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guest_key_);
  }
}

void GuestLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginReq::CopyFrom(const GuestLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginReq::IsInitialized() const {
  return true;
}

void GuestLoginReq::Swap(GuestLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginReq::InternalSwap(GuestLoginReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  guest_key_.Swap(&other->guest_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GuestLoginReq::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_game_2eproto);
  return ::file_level_metadata_game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserCenterInfo::InitAsDefaultInstance() {
}
class UserCenterInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCenterInfo::kUnickFieldNumber;
const int UserCenterInfo::kUfaceFieldNumber;
const int UserCenterInfo::kUsexFieldNumber;
const int UserCenterInfo::kUvipFieldNumber;
const int UserCenterInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCenterInfo::UserCenterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCenterInfo)
}
UserCenterInfo::UserCenterInfo(const UserCenterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unick().size() > 0) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:UserCenterInfo)
}

void UserCenterInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserCenterInfo_game_2eproto.base);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
}

UserCenterInfo::~UserCenterInfo() {
  // @@protoc_insertion_point(destructor:UserCenterInfo)
  SharedDtor();
}

void UserCenterInfo::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserCenterInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserCenterInfo& UserCenterInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserCenterInfo_game_2eproto.base);
  return *internal_default_instance();
}


void UserCenterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserCenterInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserCenterInfo*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string unick = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("UserCenterInfo.unick");
        auto str = msg->mutable_unick();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 uface = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uface(value);
        break;
      }
      // int32 usex = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_usex(value);
        break;
      }
      // int32 uvip = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uvip(value);
        break;
      }
      // int32 uid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserCenterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCenterInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserCenterInfo.unick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uvip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uvip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCenterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCenterInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserCenterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserCenterInfo.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uface(), output);
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usex(), output);
  }

  // int32 uvip = 4;
  if (this->uvip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uvip(), output);
  }

  // int32 uid = 5;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCenterInfo)
}

::google::protobuf::uint8* UserCenterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserCenterInfo.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uface(), target);
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usex(), target);
  }

  // int32 uvip = 4;
  if (this->uvip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uvip(), target);
  }

  // int32 uid = 5;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCenterInfo)
  return target;
}

size_t UserCenterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserCenterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uface());
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usex());
  }

  // int32 uvip = 4;
  if (this->uvip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uvip());
  }

  // int32 uid = 5;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserCenterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserCenterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCenterInfo* source =
      ::google::protobuf::DynamicCastToGenerated<UserCenterInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserCenterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserCenterInfo)
    MergeFrom(*source);
  }
}

void UserCenterInfo::MergeFrom(const UserCenterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserCenterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unick().size() > 0) {

    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  if (from.uface() != 0) {
    set_uface(from.uface());
  }
  if (from.usex() != 0) {
    set_usex(from.usex());
  }
  if (from.uvip() != 0) {
    set_uvip(from.uvip());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void UserCenterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserCenterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCenterInfo::CopyFrom(const UserCenterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserCenterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCenterInfo::IsInitialized() const {
  return true;
}

void UserCenterInfo::Swap(UserCenterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserCenterInfo::InternalSwap(UserCenterInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  unick_.Swap(&other->unick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
  swap(uvip_, other->uvip_);
  swap(uid_, other->uid_);
}

::google::protobuf::Metadata UserCenterInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_game_2eproto);
  return ::file_level_metadata_game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GuestLoginRes::InitAsDefaultInstance() {
  ::_GuestLoginRes_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::UserCenterInfo*>(
      ::UserCenterInfo::internal_default_instance());
}
class GuestLoginRes::HasBitSetters {
 public:
  static const ::UserCenterInfo& userinfo(const GuestLoginRes* msg);
};

const ::UserCenterInfo&
GuestLoginRes::HasBitSetters::userinfo(const GuestLoginRes* msg) {
  return *msg->userinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginRes::kStatusFieldNumber;
const int GuestLoginRes::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginRes::GuestLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginRes)
}
GuestLoginRes::GuestLoginRes(const GuestLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::UserCenterInfo(*from.userinfo_);
  } else {
    userinfo_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GuestLoginRes)
}

void GuestLoginRes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GuestLoginRes_game_2eproto.base);
  ::memset(&userinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&userinfo_)) + sizeof(status_));
}

GuestLoginRes::~GuestLoginRes() {
  // @@protoc_insertion_point(destructor:GuestLoginRes)
  SharedDtor();
}

void GuestLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete userinfo_;
}

void GuestLoginRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GuestLoginRes& GuestLoginRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GuestLoginRes_game_2eproto.base);
  return *internal_default_instance();
}


void GuestLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && userinfo_ != nullptr) {
    delete userinfo_;
  }
  userinfo_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GuestLoginRes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GuestLoginRes*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_status(value);
        break;
      }
      // .UserCenterInfo userinfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::UserCenterInfo::_InternalParse;
        object = msg->mutable_userinfo();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GuestLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .UserCenterInfo userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginRes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GuestLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // .UserCenterInfo userinfo = 2;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::userinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginRes)
}

::google::protobuf::uint8* GuestLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // .UserCenterInfo userinfo = 2;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::userinfo(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginRes)
  return target;
}

size_t GuestLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .UserCenterInfo userinfo = 2;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *userinfo_);
  }

  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GuestLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginRes* source =
      ::google::protobuf::DynamicCastToGenerated<GuestLoginRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginRes)
    MergeFrom(*source);
  }
}

void GuestLoginRes::MergeFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userinfo()) {
    mutable_userinfo()->::UserCenterInfo::MergeFrom(from.userinfo());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void GuestLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginRes::CopyFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginRes::IsInitialized() const {
  return true;
}

void GuestLoginRes::Swap(GuestLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginRes::InternalSwap(GuestLoginRes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userinfo_, other->userinfo_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata GuestLoginRes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_game_2eproto);
  return ::file_level_metadata_game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EditProfileReq::InitAsDefaultInstance() {
}
class EditProfileReq::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditProfileReq::kUnickFieldNumber;
const int EditProfileReq::kUfaceFieldNumber;
const int EditProfileReq::kUsexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditProfileReq::EditProfileReq()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EditProfileReq)
}
EditProfileReq::EditProfileReq(const EditProfileReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unick().size() > 0) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&usex_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
  // @@protoc_insertion_point(copy_constructor:EditProfileReq)
}

void EditProfileReq::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EditProfileReq_game_2eproto.base);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usex_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
}

EditProfileReq::~EditProfileReq() {
  // @@protoc_insertion_point(destructor:EditProfileReq)
  SharedDtor();
}

void EditProfileReq::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EditProfileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EditProfileReq& EditProfileReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EditProfileReq_game_2eproto.base);
  return *internal_default_instance();
}


void EditProfileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usex_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EditProfileReq::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EditProfileReq*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string unick = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("EditProfileReq.unick");
        auto str = msg->mutable_unick();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 uface = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_uface(value);
        break;
      }
      // int32 usex = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_usex(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EditProfileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EditProfileReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EditProfileReq.unick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EditProfileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EditProfileReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EditProfileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EditProfileReq.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uface(), output);
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->usex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EditProfileReq)
}

::google::protobuf::uint8* EditProfileReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EditProfileReq.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uface(), target);
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->usex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EditProfileReq)
  return target;
}

size_t EditProfileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EditProfileReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unick = 1;
  if (this->unick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  // int32 uface = 2;
  if (this->uface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uface());
  }

  // int32 usex = 3;
  if (this->usex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EditProfileReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EditProfileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EditProfileReq* source =
      ::google::protobuf::DynamicCastToGenerated<EditProfileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EditProfileReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EditProfileReq)
    MergeFrom(*source);
  }
}

void EditProfileReq::MergeFrom(const EditProfileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EditProfileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unick().size() > 0) {

    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  if (from.uface() != 0) {
    set_uface(from.uface());
  }
  if (from.usex() != 0) {
    set_usex(from.usex());
  }
}

void EditProfileReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EditProfileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditProfileReq::CopyFrom(const EditProfileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EditProfileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditProfileReq::IsInitialized() const {
  return true;
}

void EditProfileReq::Swap(EditProfileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditProfileReq::InternalSwap(EditProfileReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  unick_.Swap(&other->unick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
}

::google::protobuf::Metadata EditProfileReq::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_game_2eproto);
  return ::file_level_metadata_game_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EditProfileRes::InitAsDefaultInstance() {
}
class EditProfileRes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditProfileRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditProfileRes::EditProfileRes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EditProfileRes)
}
EditProfileRes::EditProfileRes(const EditProfileRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:EditProfileRes)
}

void EditProfileRes::SharedCtor() {
  status_ = 0;
}

EditProfileRes::~EditProfileRes() {
  // @@protoc_insertion_point(destructor:EditProfileRes)
  SharedDtor();
}

void EditProfileRes::SharedDtor() {
}

void EditProfileRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EditProfileRes& EditProfileRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EditProfileRes_game_2eproto.base);
  return *internal_default_instance();
}


void EditProfileRes::Clear() {
// @@protoc_insertion_point(message_clear_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EditProfileRes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EditProfileRes*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_status(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EditProfileRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EditProfileRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EditProfileRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EditProfileRes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EditProfileRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EditProfileRes)
}

::google::protobuf::uint8* EditProfileRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EditProfileRes)
  return target;
}

size_t EditProfileRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EditProfileRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EditProfileRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EditProfileRes)
  GOOGLE_DCHECK_NE(&from, this);
  const EditProfileRes* source =
      ::google::protobuf::DynamicCastToGenerated<EditProfileRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EditProfileRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EditProfileRes)
    MergeFrom(*source);
  }
}

void EditProfileRes::MergeFrom(const EditProfileRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EditProfileRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void EditProfileRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EditProfileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditProfileRes::CopyFrom(const EditProfileRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EditProfileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditProfileRes::IsInitialized() const {
  return true;
}

void EditProfileRes::Swap(EditProfileRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditProfileRes::InternalSwap(EditProfileRes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata EditProfileRes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_game_2eproto);
  return ::file_level_metadata_game_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::GuestLoginReq* Arena::CreateMaybeMessage< ::GuestLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::GuestLoginReq >(arena);
}
template<> PROTOBUF_NOINLINE ::UserCenterInfo* Arena::CreateMaybeMessage< ::UserCenterInfo >(Arena* arena) {
  return Arena::CreateInternal< ::UserCenterInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GuestLoginRes* Arena::CreateMaybeMessage< ::GuestLoginRes >(Arena* arena) {
  return Arena::CreateInternal< ::GuestLoginRes >(arena);
}
template<> PROTOBUF_NOINLINE ::EditProfileReq* Arena::CreateMaybeMessage< ::EditProfileReq >(Arena* arena) {
  return Arena::CreateInternal< ::EditProfileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::EditProfileRes* Arena::CreateMaybeMessage< ::EditProfileRes >(Arena* arena) {
  return Arena::CreateInternal< ::EditProfileRes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
