syntax = "proto3"; 

/*
添加新协议的规则
1.在game.proto文件添加新协议和结构
    enum Cmd添加协议id
	添加新协议和结构
2.在cmd_type添加新协议的id
3.在cmd_name_map.lua添加命令名字,服务引擎在启动
4.运行proto文件夹下的bat文件，重新生成新协议文件
5.重新编译服务引擎
*/
enum Stype{
	INVALIDI_STYPE = 0;
	AUTH_STYPE = 1;
	SYSTEM_STYPE = 2;
	LOGIC_STYPE =3;
}

enum Cmd {
	INVALID_CMD = 0;
	eGuestLoginReq = 1;
	eGuestLoginRes = 2;
	eReLoginRes = 3;
	eUserLostConn = 4;
	eEditProfileReq = 5;
	eEditProfileRes = 6;
	eAccountUpgradeReq = 7;
	eAccountUpgradeRes = 8;
	eUnameLoginReq = 9;
	eUnameLoginRes = 10;
	eLoginOutReq = 11;
	eLoginOutRes = 12;
	//系统服务器协议
	eGetUgameInfoReq = 13;
	eGetUgameInfoRes = 14;
}

message GuestLoginReq{
   string guest_key = 1; 
}

message UserCenterInfo{
	string unick = 1;
	int32 uface = 2;
	int32 usex = 3;
	int32 uvip = 4;
	int32 uid = 5;
}

message GuestLoginRes{
   int32 status = 1;
   UserCenterInfo userinfo=2;
}


message UnameLoginReq {
     string uname = 1;
	 string upwd_md5 = 2;
}

message UnameLoginRes{
     int32 status = 1;
     UserCenterInfo userinfo=2;
}

message EditProfileReq {
	 string unick = 1;
	 int32 uface = 2;
	 int32 usex = 3;
}

message EditProfileRes {
	 int32 status = 1;
}

message AccountUpgradeReq {
     string uname = 1; //登录的用户名，全局唯一，不是unick
	 string upwd_md5 = 2;
}

message AccountUpgradeRes {
     int32 status = 1;
}

message LoginOutRes {
     int32 status = 1;
}


message UserGameInfo {
	 int32 uchip = 1;
	 int32 uexp = 2;
	 int32 uvip = 3;
	 int32 uchip2 = 4;
	 int32 uchip3 = 5;
	 int32 udata1 = 6;
	 int32 udata2 = 7;
	 int32 udata3 = 8;
}

message GetUgameInfoRes {
	 int32 status = 1;
	 UserGameInfo uinfo = 2; 
}
